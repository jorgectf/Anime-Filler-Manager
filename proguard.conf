# Useful https://stackoverflow.com/a/35509428
# Tbh I don't think I can get this to work on the shaded jar

-verbose

-optimizationpasses 5 #1

-keepparameternames

-renamesourcefileattribute SourceFile
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,
				SourceFile,LineNumberTable,*Annotation*,EnclosingMethod


-allowaccessmodification

-dontnote
-dontwarn # Ignore com.sun missing classes

-dontusemixedcaseclassnames

# Entry point
-keep class afm.Launcher {
	public static void main(java.lang.String[]);
}

# They use Preferences nodes according to their name
-keepnames class afm.user.Settings
-keepnames class afm.utils.Utils

# Keep names of all FXML variables & methods in screens
-keepclassmembers class afm.screens.** {
	@javafx.fxml.FXML *;
}

# Keep all enum names
-keepclassmembers enum * {
	<fields>;
	public static **[] values();
	public static ** valueOf(java.lang.String);
}



# Shaded jar:


# Keep javafx stuff (?)
-keepnames class javafx.**

# Keep things called explicitly through reflection (?)
-keep class com.sun.javafx.tk.**
#-keep class com.sun.**

# Don't merge classes
#-optimizations !class/merging/


# Keep native method names
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep serialization stuff
-keepnames class * implements java.io.Serializable
-keepclassmembers class * implements java.io.Serializable {
	static final long serialVersionUID;
	private static final java.io.ObjectStreamField[] serialPersistentFields;
	!static !transient <fields>;
	private void writeObject(java.io.ObjectOutputStream);
	private void readObject(java.io.ObjectInputStream);
	java.lang.Object writeReplace();
	java.lang.Object readResolve();
}
